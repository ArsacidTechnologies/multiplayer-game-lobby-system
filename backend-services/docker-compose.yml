version: "3.4"

services:
  rabbitmq:
    container_name: rabbitmq-mgls
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 50
    networks:
      - rbmq

  redis:
    container_name: redis-mgls
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./redis-data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db

  lobbyservice:
    container_name: lobbyservice-mgls
    image: ${DOCKER_REGISTRY-}lobbyservice
    build:
      context: .
      dockerfile: LobbyService/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - db
      - gw
      - rbmq

  playerservice:
    container_name: playerservice-mgls
    image: ${DOCKER_REGISTRY-}playerservice
    build:
      context: .
      dockerfile: PlayerService/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - db
      - gw
      - rbmq

  gatewayservice:
    container_name: gatewayservice-mgls
    image: ${DOCKER_REGISTRY-}gatewayservice
    build:
      context: .
      dockerfile: GatewayService/Dockerfile
    networks:
      - gw

  notificationservice:
    container_name: notificationservice-mgls
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - gw
      - rbmq

networks:
  gw:
    driver: bridge
  db:
    driver: bridge
  rbmq:
    driver: bridge
